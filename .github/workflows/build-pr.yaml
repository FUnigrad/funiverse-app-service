name: Build and test on Pull request

on: pull_request
env:
  IMAGE_NAME: ${{vars.APP_SERVICE_REPO}}
jobs:
  # build-and-test:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 2
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
      
  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: '17'
  #         distribution: 'temurin'
  #         cache: maven

  #     - name: Build with Maven
  #       run: mvn --batch-mode clean package
  #     # -------Test CD---------
  #     - name: Get Release Version
  #       run: |
  #         echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{secrets.DOCKERHUB_USERNAME}}
  #         password: ${{secrets.DOCKERHUB_PASSWORD}}
    
  #     - name: Build and push
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: .
  #         push: true
  #         tags: |
  #           ${{env.IMAGE_NAME}}:${{env.VERSION}}
  #           ${{env.IMAGE_NAME}}:latest
      
  #     # -------Test CD---------

  #     - name: Publish Test Results
  #       uses: EnricoMi/publish-unit-test-result-action@v2
  #       if: success()
  #       with:
  #         files: |
  #           **/target/surefire-reports/**.xml
    
  #     - name: Build Success
  #       uses : rjstone/discord-webhook-notify@v1
  #       if: success()
  #       with:
  #         severity: info
  #         details: |
  #           Build Succeeded!
  #         webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      
  #     - name: Build Failed
  #       uses: rjstone/discord-webhook-notify@v1
  #       if: failure()
  #       with:
  #         severity: error
  #         details: Build Failed!
  #         webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
  #   outputs:
  #     version: ${{env.VERSION}}
  update-config:
    runs-on: ubuntu-latest
    # needs: build-and-test
    steps:
      - name: Checkout Infra Config Repo
        uses: actions/checkout@v3
        with:
          repository: FUnigrad/funiverse-infra-config
      # - name: Get Version
      #   run: echo "VERSION=${{needs.build-and-test.outputs.version}}" >> $GITHUB_ENV
      - name: Update Manifest
        run: |
          cd config/4-backend
          sed -i "s+${{env.IMAGE_NAME}}.*+${{env.IMAGE_NAME}}:123+g" 5-app-service-deployment.yaml
          cat 5-app-service-deployment.yaml | grep funiverse
      # - name: Commit and Push
      #   uses: actions-js/push@master
      #   with:
      #     github_token: ${{secrets.PUSH_GITHUB_TOKEN}}
      #     branch: dev
      #     message: Update to ${{env.IMAGE_NAME}}:${{env.VERSION}} by CI pipeline
      - name: Commit and push
        run: |
          git config --global user.name 'nqbao11'
          git config --global user.email 'nqbao11.01@gmail.com'
          git commit -am "Update to ${{env.IMAGE_NAME}}:${{env.VERSION}} by CI pipeline"
          git push
